/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tour;

/**
 *
 * @author Jrad
 */
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
public class branch extends javax.swing.JFrame {
Connection con; // for establishing a connection
    Statement st;  //sql statement
    String cs;  //database path
    ResultSet rs; //for the resultset
    
    String user;  //database username
    String password;  //database password
    String query;
    /**
     * Creates new form branch
     */
    public branch() {
         st = null;
        //statement = null;
        rs = null;
        cs = "jdbc:mysql://localhost:3306/mydb";
        user = "root";
        password = "@tQbfjotlD//1q";
        initComponents();
        registerDriverAndst();
       
    }
     private void registerDriverAndst(){
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection(cs, user, password);
            st = con.createStatement();
        }
        catch (SQLException ex)
        {
            ex.printStackTrace();
        }
        catch (ClassNotFoundException e)
        {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnsave = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        btndel = new javax.swing.JButton();
        btnexit = new javax.swing.JButton();
        btnfirst = new javax.swing.JButton();
        btnlast = new javax.swing.JButton();
        btnprevious = new javax.swing.JButton();
        btnnext = new javax.swing.JButton();
        btnclear = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        txtcityname = new javax.swing.JTextField();
        txtcountryname = new javax.swing.JTextField();
        lblcityname = new javax.swing.JLabel();
        lblcountryid = new javax.swing.JLabel();
        lblbranchname = new javax.swing.JLabel();
        txtbranchname = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gerald tours branches");

        btnsave.setText("SAVE");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        btnupdate.setText("UPDATE");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });

        btndel.setText("DELETE");
        btndel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndelActionPerformed(evt);
            }
        });

        btnexit.setText("EXIT");
        btnexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnexitActionPerformed(evt);
            }
        });

        btnfirst.setText("FIRST");
        btnfirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnfirstActionPerformed(evt);
            }
        });

        btnlast.setText("LAST");
        btnlast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlastActionPerformed(evt);
            }
        });

        btnprevious.setText("PREVIOUS");
        btnprevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpreviousActionPerformed(evt);
            }
        });

        btnnext.setText("NEXT");
        btnnext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnextActionPerformed(evt);
            }
        });

        btnclear.setText("CLEAR");
        btnclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnnext)
                    .addComponent(btnfirst)
                    .addComponent(btnsave))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnlast, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnupdate, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnprevious, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(44, 44, 44)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnexit, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btndel, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(btnclear))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnsave)
                    .addComponent(btnupdate)
                    .addComponent(btnclear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btndel)
                    .addComponent(btnlast)
                    .addComponent(btnfirst))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnprevious)
                    .addComponent(btnnext)
                    .addComponent(btnexit))
                .addGap(15, 15, 15))
        );

        txtcountryname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcountrynameActionPerformed(evt);
            }
        });

        lblcityname.setText("CITY NAME");

        lblcountryid.setText("COUNTRY ID");

        lblbranchname.setText("BRANCH NAME");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblcountryid, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblcityname, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(lblbranchname)))
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtbranchname)
                    .addComponent(txtcityname, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                    .addComponent(txtcountryname, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(24, 24, 24))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblbranchname, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtbranchname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblcityname)
                    .addComponent(txtcityname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblcountryid, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtcountryname, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(12, 12, 12)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
     if(txtbranchname.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Please enter the country name");
            txtbranchname.setText("");
            txtbranchname.requestFocus();

        }
        if(txtcountryname.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Please enter the country name");
            txtcountryname.setText("");
            txtcountryname.requestFocus();

        }
        if(txtcityname.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Please enter the country name");
            txtcityname.setText("");
            txtcityname.requestFocus();

        }
        String s1,s2,s3;
        s1 = txtbranchname.getText();
        s2 = txtcountryname.getText();
        s3 = txtcityname.getText();
        
        try{
            query="SELECT branchname from branch";
            rs = st.executeQuery(query);
            while(rs.next()){
            if(s1.equals(rs.getString("branchname"))){
                JOptionPane.showMessageDialog(null,"the city already exists\n please enter another city");
                txtbranchname.setText("");
                txtcountryname.setText("");
                txtcityname.setText("");
                return;
            }}
            query="SELECT cityid from city where cityname='"+s3+"'";
            rs = st.executeQuery(query);
            rs.next();
            int m = rs.getInt("cityid");
            
            query="SELECT countryid from country where countryName ='"+s2+"'";
            rs = st.executeQuery(query);
            rs.next();
            int i = rs.getInt("countryid");
            
            query = "INSERT INTO branch(branchname,city_cityid,city_country_countryid) values('"+s1+"','"+m+"','"+i+"')";
            JOptionPane.showConfirmDialog(null,"Do u really want to add the above country");
            st.executeUpdate(query);
            txtbranchname.setText("");
            txtcountryname.setText("");
            txtcityname.setText("");
            
        }
            catch(SQLException ex){
                JOptionPane.showMessageDialog(null,"The branch name already exists \nPlease enter a new branch name");
            txtbranchname.setText("");
            txtcityname.setText("");
            txtcountryname.setText("");
            txtbranchname.requestFocus();
                    
                    }

    }//GEN-LAST:event_btnsaveActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnupdateActionPerformed

    private void btndelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndelActionPerformed

        try{
            String s1 = txtbranchname.getText();
            query = "DELETE From branch where branchname='"+s1+"'";
            JOptionPane.showConfirmDialog(null,"Do u really want to delete"+s1);
            st.executeUpdate(query);
            txtbranchname.setText("");
            txtcountryname.setText("");
            txtcityname.setText("");

        }
        catch(SQLException ex){

            JOptionPane.showMessageDialog(null,"The country name does not exist \nPlease reenter another country name that exists");
            txtbranchname.setText("");
            txtcountryname.setText("");
            txtcityname.setText("");
            txtbranchname.requestFocus();
        }
    }//GEN-LAST:event_btndelActionPerformed

    private void btnexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnexitActionPerformed
        JOptionPane.showConfirmDialog(null,"Do u really want to exit ");
        System.exit(0);
    }//GEN-LAST:event_btnexitActionPerformed

    private void btnfirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnfirstActionPerformed
        try{
            query="SELECT branchname,city_cityid,city_country_countryid FROM branch";
            rs = st.executeQuery(query);
            while(rs.next()){
                if(rs.isFirst()){
            txtbranchname.setText(rs.getString("branchname"));
            int i = rs.getInt("city_cityid");
            int m = rs.getInt("city_country_countryid");
            query="SELECT cityname from city where cityid ='"+i+"'";
            rs = st.executeQuery(query);
            rs.next();
            txtcityname.setText(rs.getString("cityname"));
            
            query="SELECT countryName from country where countryid ='"+m+"'";
            rs = st.executeQuery(query);
            rs.next();
            txtcountryname.setText(rs.getString("countryName"));query="SELECT countryName from country where countryid ='"+i+"'";
            rs = st.executeQuery(query);
            rs.next();
            txtcountryname.setText(rs.getString("countryName"));
            }
            
            }
        }
        catch(SQLException ex){
            ex.printStackTrace();

        }
    }//GEN-LAST:event_btnfirstActionPerformed

    private void btnlastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlastActionPerformed
        try{
            query="SELECT branchname,city_cityid,city_country_countryid FROM branch";
            rs = st.executeQuery(query);
            while(rs.next()){
                if(rs.isLast()){
            txtbranchname.setText(rs.getString("branchname"));
            int i = rs.getInt("city_cityid");
            int m = rs.getInt("city_country_countryid");
            query="SELECT cityname from city where cityid ='"+i+"'";
            rs = st.executeQuery(query);
            rs.next();
            txtcityname.setText(rs.getString("cityname"));
            
            query="SELECT countryName from country where countryid ='"+m+"'";
            rs = st.executeQuery(query);
            rs.next();
            txtcountryname.setText(rs.getString("countryName"));query="SELECT countryName from country where countryid ='"+i+"'";
            rs = st.executeQuery(query);
            rs.next();
            txtcountryname.setText(rs.getString("countryName"));
            }
            
            }
        }
        catch(SQLException ex){
            ex.printStackTrace();

        }
    }//GEN-LAST:event_btnlastActionPerformed

    private void btnpreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpreviousActionPerformed

          try{
          String s1,s2;
          s1 =txtbranchname.getText();
          s2 = "SELECT branchid FROM branch where branchname='"+s1+"'";
          ResultSet rs2 = st.executeQuery(s2);
          rs2.next();
          int i =rs2.getInt("branchid");
            i=i-1;
              query="SELECT branchname,city_cityid,city_country_countryid FROM branch where branchid = '"+i+"'";
        rs = st.executeQuery(query);
        rs.next();
        
            txtbranchname.setText(rs.getString("branchname"));
            int t = rs.getInt("city_cityid");
            int m = rs.getInt("city_country_countryid");
            query="SELECT countryName from country where countryid ='"+m+"'";
            rs = st.executeQuery(query);
            rs.next();
            txtcountryname.setText(rs.getString("countryName"));
            
            query="SELECT cityname from city where cityid ='"+t+"'";
            rs = st.executeQuery(query);
            rs.next();
            txtcityname.setText(rs.getString("cityname"));
      
          }
        
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null,"The city name does not exist \nPlease reenter another city name that exists");
            txtbranchname.setText("");
            txtcountryname.setText("");
            txtcityname.setText("");
            txtbranchname.requestFocus();
                      
        }  
    }//GEN-LAST:event_btnpreviousActionPerformed

    private void btnnextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnextActionPerformed
            try{
          String s1,s2;
          s1 =txtbranchname.getText();
          s2 = "SELECT branchid FROM branch where branchname='"+s1+"'";
          ResultSet rs2 = st.executeQuery(s2);
          rs2.next();
          int i =rs2.getInt("branchid");
            i=i+1;
              query="SELECT branchname,city_cityid,city_country_countryid FROM branch where branchid = '"+i+"'";
        rs = st.executeQuery(query);
        rs.next();
        
            txtbranchname.setText(rs.getString("branchname"));
            int t = rs.getInt("city_cityid");
            int m = rs.getInt("city_country_countryid");
            query="SELECT countryName from country where countryid ='"+m+"'";
            rs = st.executeQuery(query);
            rs.next();
            txtcountryname.setText(rs.getString("countryName"));
            
            query="SELECT cityname from city where cityid ='"+t+"'";
            rs = st.executeQuery(query);
            rs.next();
            txtcityname.setText(rs.getString("cityname"));
      
          }
        
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null,"The city name does not exist \nPlease reenter another city name that exists");
            txtbranchname.setText("");
            txtcountryname.setText("");
            txtcityname.setText("");
            txtbranchname.requestFocus();
                      
        }
    }//GEN-LAST:event_btnnextActionPerformed

    private void btnclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearActionPerformed
        txtbranchname.setText("");
        txtcountryname.setText("");
        txtcityname.setText("");
        txtbranchname.requestFocus();
    }//GEN-LAST:event_btnclearActionPerformed

    private void txtcountrynameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcountrynameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcountrynameActionPerformed

    /**
     * @param args the command line arguments
     */
    public void Branch() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(branch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(branch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(branch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(branch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new branch().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnclear;
    private javax.swing.JButton btndel;
    private javax.swing.JButton btnexit;
    private javax.swing.JButton btnfirst;
    private javax.swing.JButton btnlast;
    private javax.swing.JButton btnnext;
    private javax.swing.JButton btnprevious;
    private javax.swing.JButton btnsave;
    private javax.swing.JButton btnupdate;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblbranchname;
    private javax.swing.JLabel lblcityname;
    private javax.swing.JLabel lblcountryid;
    private javax.swing.JTextField txtbranchname;
    private javax.swing.JTextField txtcityname;
    private javax.swing.JTextField txtcountryname;
    // End of variables declaration//GEN-END:variables
}
